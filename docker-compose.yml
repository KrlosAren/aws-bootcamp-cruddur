version: "3.8"

services:

  backend:
    build:
      context: ./backend-flask
      dockerfile: Dockerfile
    container_name: backend_flask
    image: backend_flask
    volumes:
      - ./backend-flask:/app:z
    ports:
      - "4500:5000"
    environment:
      FRONTEND_URL : "https://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      BACKEND_URL : "https://4500-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      OTEL_SERVICE_NAME: 'backend-flask'
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"

  frontend:
    build:
     context: ./frontend-react-js
     dockerfile: Dockerfile
    container_name: frontend_react
    image: frontend_react
    volumes:
      - ./frontend-react-js:/app:z
    ports:
      - "3000:3000"
    environment:
      REACT_APP_BACKEND_URL : "https://4500-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"

  dynamodb-local:
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local"
    container_name: dynamodb-local
    ports:
     - "8000:8000"
    volumes:
       -  ./docker/dynamodb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal
  
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:
    driver: local

networks: 
  internal-network:
    driver: bridge
    name: cruddur